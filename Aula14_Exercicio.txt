Exercicio 1 Crie uma view chamada "VIEW_VEICULO" com os seguintes campos:
	   | id_veiculo | marca | modelo | ano | tipo | cor | valor_km_rodado

create or replace view view_veiculo as
select	
	v.ID_VEICULO id,   
	mc.nome Marca,    
	md.nome Modelo,    
	v.ano Ano,
	tv.nome tipo_veiculo,
	c.nome Cor,
	tv.vl_km_rodado valor_por_km
from veiculo v
inner join modelo md on md.id_modelo = v.id_modelo
inner join marca mc on mc.id_marca = md.id_marca
inner join tipo_veiculo tv on tv.id_tipo_veiculo = v.id_tipo_veiculo
inner join cor c on c.id_cor = v.id_cor;
--------------------------------------------------------------------------------------------------------------
Exercicio 2 Crie uma consulta que exiba os veículos cadastrados, ordenados por marca e modelo
utilizando a “VIEW_VEICULO”

select * from view_veiculo vv order by vv.marca,vv.modelo;

--------------------------------------------------------------------------------------------------------------
Exercicio 3 Crie uma view chamada “VIEW_CIDADE” com os seguintes campos:
	    | id_cidade | nome cidade | nome estado | sigla do estado | 

create or replace view view_cidade as
select
	c.id_cidade id,
	c.nome Cidade,
	e.nome Estado,
	e.SIGLA Sigla
from cidade c
inner join estado e on e.id_estado = c.id_estado;
--------------------------------------------------------------------------------------------------------------
Exercicio 4 Crie uma consulta que exiba as cidades de Santa Catarina, ordenadas pelo nome em ordem
decrescente.

select * from view_cidade vc where vc.sigla = lower('SC') order by vc.cidade;
--------------------------------------------------------------------------------------------------------------
Ecxercicio 5 Crie uma consulta que exiba a quantidade de cidades cadastradas para cada estado, com
base na “VIEW_CIDADE”

select vc.sigla, count(*) "Numero de Cidades"  from view_cidade vc group by vc.sigla;
--------------------------------------------------------------------------------------------------------------
Exercicio 6 Crie uma consulta para listar a quantidade carros de uma mesma marca e modelo.

select 
	vv.marca, 
	vv.modelo, 
	count(vv.marca) "Qtd Carros"  
from view_veiculo vv group by vv.marca, vv.modelo;
--------------------------------------------------------------------------------------------------------------
Exercicio 7 Crie uma consulta para listar a quantidade carros de uma mesma marca, modelo e cor.

select
	vv.marca, 
	vv.modelo, 
	vv.cor,	
	count(*) "Qtd Marcas"  
from view_veiculo vv 
group by vv.marca, vv.modelo, vv.cor;
--------------------------------------------------------------------------------------------------------------
Exercicio 8 Crie uma consulta para listar a quantidade de clientes que sejam da mesma cidade.

select 
	vc.cidade, 
	count(c.nome) Qtd
from view_cidade vc 
inner join cliente c on c.id_cidade = vc.id 
group by vc.cidade;
--------------------------------------------------------------------------------------------------------------
Ecercicio 9 Crie uma consulta para buscar as 10 primeiras cidades cadastradas em ordem alfabética.
(limit 10)

select 
	c.nome
from cidade c order by c.nome limit 10;
--------------------------------------------------------------------------------------------------------------
Exercicio 10 Crie uma consulta para buscar todos os clientes que possuam a letra “F” no seu nome, que
sejam do estado de Santa Catarina e que tenham pelo menos duas locações de veículos.

select 
	c.id_cliente Id,
	c.nome Nome,
	cd.nome Cidade,
	e.sigla Sigla,
    	count(l.id_cliente) Locacao
from cliente c 
left join locacao l on l.id_cliente = c.id_cliente
inner join cidade cd on cd.id_cidade = c.id_cidade
inner join estado e on e.id_estado = cd.id_estado
where c.nome like lower("%f%")
and e.sigla like 'SC'
having locacao >=2;
--------------------------------------------------------------------------------------------------------------
Exerecicio 11 Crie uma consulta para buscar todos os clientes que tenham mais de 03 locações de veículos.

select 
	c.id_cliente Id,
	c.nome Nome,
	cd.nome Cidade,
	e.sigla Sigla,
    	count(l.id_cliente) Locacao
from cliente c 
inner join locacao l on l.id_cliente = c.id_cliente
inner join cidade cd on cd.id_cidade = c.id_cidade
inner join estado e on e.id_estado = cd.id_estado
group by c.id_cliente
having locacao >= 3;
--------------------------------------------------------------------------------------------------------------
Exercicio 12 Crie uma consulta para buscar todos os clientes que não tenham nenhuma locação de
veículo.
* Use uma sub consulta na cláusula where com id_cliente not in (select id_cliente from ....)

select 
	c.id_cliente Id,
	c.nome Nome,
	cd.nome Cidade,
	e.sigla Sigla,
    	count(l.id_cliente) Locacao
from cliente c 
left join locacao l on l.id_cliente = c.id_cliente
inner join cidade cd on cd.id_cidade = c.id_cidade
inner join estado e on e.id_estado = cd.id_estado
group by c.id_cliente
having locacao = 0;
--------------------------------------------------------------------------------------------------------------
Exercicio 13 Crie uma consulta para buscar os carros que não tenham sido utilizados em nenhuma locação

select 
	vv.marca,
	vv.modelo,
    	count(l.id_locacao) 'Locacao'
from view_veiculo vv
left join locacao l on vv.id = l.id_veiculo
group by vv.id
having locacao = 0;
--------------------------------------------------------------------------------------------------------------
Exercicio 14 Crie uma consulta para listar as quilometragens totais percorridas por cada veículo.

select 
	vv.marca,
    	vv.modelo,
    	concat(ifnull(sum(l.km_final - l.km_atual), 0),' km') Km_rodado
from view_veiculo vv
left join locacao l on l.id_veiculo = vv.id
group by vv.modelo;
--------------------------------------------------------------------------------------------------------------
Exercicio 15 Crie uma consulta para listar 03 carros com as maiores quilometragens percorridas

select 
	vl.marca,
   	 vl.modelo,
    	concat(sum(vl.km_percorrido),' km') km_rodado
from view_locacao vl
group by vl.modelo
order by sum(vl.km_percorrido) desc
limit 3;
--------------------------------------------------------------------------------------------------------------
Exercicio 16 Crie uma consulta para listar os carros 03 carros com as menores quilometragens percorridas

select 
	vl.marca,
    	vl.modelo,
    	concat(sum(vl.km_percorrido),' km') km_rodado
from view_locacao vl
group by vl.modelo
order by sum(vl.km_percorrido) asc
limit 3;
--------------------------------------------------------------------------------------------------------------
Exercicio 17 Crie uma consulta para listar os clientes que percorreram a maior quantidade de quilômetros

select 
	vl.cliente,
    	concat(sum(vl.km_percorrido),' km') km_rodado
from view_locacao vl
group by vl.cliente
order by sum(vl.km_percorrido) desc;

--------------------------------------------------------------------------------------------------------------
Exercicio 18 Crie uma consulta para listar os clientes que percorreram a menor quantidade de quilômetros

select 
	vl.cliente,
    	concat(sum(vl.km_percorrido),' km') km_rodado
from view_locacao vl
group by vl.cliente
order by sum(vl.km_percorrido) asc;
--------------------------------------------------------------------------------------------------------------
Exercicio 19 Crie uma consulta para listar os valores pagos em todas as locações para cada tipo de veículo

select 	
	tv.nome tipo_veiculo,
    	concat('R$ ',(ifnull(sum((l.KM_FINAL - l.KM_ATUAL)*tv.VL_KM_RODADO), 0))) Valor_Pago
from locacao l
right join cliente c on c.id_cliente = l.id_cliente
right join veiculo v on v.id_veiculo = l.id_veiculo
right join modelo md on md.id_modelo = v.ID_MODELO
right join marca mc on mc.ID_MARCA = md.ID_MARCA
inner join tipo_veiculo tv on tv.id_tipo_veiculo = v.id_tipo_veiculo
group by tv.nome;
--------------------------------------------------------------------------------------------------------------
Exercicio 20 Crie uma consulta para listar os totais de quilômetros percorridos por cada tipo de veículo

select 	
    	tv.nome tipo_veiculo,
	concat(ifnull(sum(l.KM_FINAL - l.KM_ATUAL),0),' KM') KM_Percorrido
from locacao l
right join cliente c on c.id_cliente = l.id_cliente
right join veiculo v on v.id_veiculo = l.id_veiculo
right join modelo md on md.id_modelo = v.ID_MODELO
right join marca mc on mc.ID_MARCA = md.ID_MARCA
inner join tipo_veiculo tv on tv.id_tipo_veiculo = v.id_tipo_veiculo
group by tv.nome;
